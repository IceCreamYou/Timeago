<?php

/**
 * @file
 *   Adds support for the Timeago jQuery library.
 */

/**
 * Converts a timestamp into a Timeago date.
 *
 * @param $timestamp
 *   A UNIX timestamp.
 * @param $date
 *   (Optional) A human-readable date (will be displayed if JS is disabled).
 *   If not provided, the site default date format is used.
 * @return
 *   HTML representing a Timeago-friendly date.
 */
function timeago_format_date($timestamp, $date = NULL) {
  drupal_add_library('timeago', 'timeago');
  if (!isset($date)) {
    $date = format_date($timestamp);
  }
  $elem = variable_get('timeago_elem', 'span');
  $time = format_date($timestamp, 'custom', 'c');
  if ($elem == 'time') {
    return '<time class="timeago" datetime="'. $time .'">'. $date .'</time>';
  }
  else {
    return '<'. $elem .' class="timeago" title="'. $time .'">'. $date .'</abbr>';
  }
  return $date;
}

/**
 * Implements hook_menu().
 */
function timeago_menu() {
  $items = array();
  $items['admin/config/user-interface/timeago'] = array(
    'title' => 'timeago',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('timeago_admin'),
    'access arguments' => array('administer site configuration'),
    'description' => 'Allows administrators to adjust settings for timeago.',
  );
  return $items;
}

/**
 * The administrative settings form.
 */
function timeago_admin(&$form, $form_state) {
  $form['timeago_node'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use timeago for node creation dates'),
    '#default_value' => variable_get('timeago_node', 1),
  );
  $form['timeago_comment'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use timeago for comment creation/changed dates'),
    '#default_value' => variable_get('timeago_comment', 1),
  );
  $form['timeago_elem'] = array(
    '#type' => 'radios',
    '#title' => t('Time element'),
    '#default_value' => variable_get('timeago_elem', 'span'),
    '#options' => array(
      'span' => t('span'),
      'abbr' => t('abbr'),
      'time' => t('time (HTML5 only)'),
    ),
  );
  return system_settings_form($form);
}

/**
 * Implements hook_library().
 */
function timeago_library() {
  $path = drupal_get_path('module', 'timeago');
  return array(
    'timeago' => array(
      'title' => t('Time ago'),
      'website' => 'http://timeago.yarp.com/',
      'version' => '0.9.3',
      'js' => array(
        $path . '/jquery.timeago.js' => array(),
        $path . '/timeago.js' => array(),
      ),
    ),
  );
}

/**
 * Implements hook_process_node().
 *
 * We have to use process instead of preprocess because some themes (notably
 * bartik) override $variables['submitted'] in their preprocess implementations
 * which can result in something like "published by admin on 10 minutes ago."
 */
function timeago_process_node(&$variables) {
  if (variable_get('timeago_node', 1)) {
    $node = $variables['node'];
    $variables['date'] = timeago_format_date($node->created, $variables['date']);
    if (variable_get('node_submitted_' . $node->type, TRUE)) {
      $variables['submitted'] = t('Submitted by !username !datetime', array('!username' => $variables['name'], '!datetime' => $variables['date']));
    }
  }
}

/**
 * Implements hook_preprocess_comment().
 */
function timeago_preprocess_comment(&$variables) {
  if (variable_get('timeago_comment', 1)) {
    $comment = $variables['comment'];
    $variables['created'] = timeago_format_date($comment->created, $variables['created']);
    $variables['changed'] = timeago_format_date($comment->changed, $variables['changed']);
    $variables['submitted'] = t('Submitted by !username !datetime', array('!username' => $variables['author'], '!datetime' => $variables['created']));
  }
}

/**
 * Implements hook_token_info().
 */
function timeago_token_info() {
  $return['tokens']['node']['timeago'] = array(
    'name' => t('Created time ago'),
    'description' => t('The amount of time ago the node was created. Uses the Timeago module to display the time dynamically with graceful degredation for non-JS users.'),
  );
  $return['tokens']['comment']['created-timeago'] = array(
    'name' => t('Created time ago'),
    'description' => t('The amount of time ago the comment was created. Uses the Timeago module to display the time dynamically with graceful degredation for non-JS users.'),
  );
  $return['tokens']['comment']['changed-timeago'] = array(
    'name' => t('Created time ago'),
    'description' => t('The amount of time ago the comment was changed. Uses the Timeago module to display the time dynamically with graceful degredation for non-JS users.'),
  );
  return $return;
}

/**
 * Implements hook_tokens().
 */
function timeago_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  if ($type == 'node' && !empty($data['node']) && isset($tokens['timeago'])) {
    $node = (object) $data['node'];
    $replacements[$tokens['timeago']] = timeago_format_date($node->created);
  }
  if ($type == 'comment' && !empty($data['comment'])) {
    $comment = (object) $data['comment'];
    if (isset($tokens['created-timeago'])) {
      $replacements[$tokens['created-timeago']] = timeago_format_date($comment->created);
    }
    if (isset($tokens['changed-timeago'])) {
      $replacements[$tokens['changed-timeago']] = timeago_format_date($comment->changed);
    }
  }
  return $replacements;
}
